services:
  server-data-db:
    container_name: server_data_db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: server_data_db
      POSTGRES_PASSWORD: server_data_db
      POSTGRES_DB: server_data
    volumes:
      - server_data_db:/var/lib/postgresql/data
    networks:
      - image_network

  zipkin:
    image: openzipkin/zipkin
    container_name: image_zipkin
    restart: always
    ports:
      - "9411:9411"
    networks:
      - image_network

  redis:
    image: redis:latest
    container_name: image_redis
    ports:
      - "6379:6379"
    networks:
      - image_network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # Minio API 포트
      - "9001:9001"  # Minio 웹 콘솔 포트
    volumes:
      - ./data:/data  # 데이터를 저장할 로컬 디렉토리
    environment:
      MINIO_ROOT_USER: minio    # Minio 로그인 사용자 이름
      MINIO_ROOT_PASSWORD: minioadmin  # Minio 로그인 비밀번호
    command: server /data --console-address ":9001"  # Minio 서버 실행 명령
    networks:
      - image_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    platform: linux/amd64
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - image_network

  kafka:
    image: wurstmeister/kafka:latest
    platform: linux/amd64
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - image_network
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    platform: linux/amd64
    ports:
      - "8081:8081"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: "false"
    networks:
      - image_network
volumes:
  server_data_db:

networks:
  image_network:
    driver: bridge
