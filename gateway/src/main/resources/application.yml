# 서비스 이름 및 환경 분리
spring:
  main:
    web-application-type: reactive  # Spring 애플리케이션이 리액티브 웹 애플리케이션으로 설정됨
  application:
    name: gateway
  profiles:
    active: dev
  cloud:
    gateway:
      routes: # Spring Cloud Gateway의 라우팅 설정
        # TODO : 다른 서비스 설정 완료 시 추가 예정
        - id: upload # 라우트 식별자
          uri: lb://upload  # 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/image/upload/**  # 경로로 들어오는 요청을 이 라우트로 처리
        - id: cdn # 라우트 식별자
          uri: lb://cdn  # 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/cdn/**  # 경로로 들어오는 요청을 이 라우트로 처리
        - id: resize # 라우트 식별자
          uri: lb://resize  # 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/resize/**  # 경로로 들어오는 요청을 이 라우트로 처리
        - id: convert # 라우트 식별자
          uri: lb://convert  # 이름으로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/convert/**  # 경로로 들어오는 요청을 이 라우트로 처리
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정


server:
  port: 19091


eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/  # Eureka 서버 URL
    register-with-eureka: true  # Eureka 서버에 등록
    fetch-registry: true  # Eureka 서버로부터 레지스트리 정보 가져오기
